{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExperApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","handleInputChange","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GiftExperApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,GAAD,OApBI,SAACA,GACvBF,EAAcE,EAAEQ,OAAOF,OAmBCG,CAAkBT,Q,uBC1BrCU,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIhC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCJHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAEdf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA0BxC,OAnBAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAK,SAAAC,GAAI,OAEvBH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAIjB,CAACpB,IASGqB,EDhBwBK,CAAc1B,GAAjCa,EATuB,EAS5BN,KAAaa,EATe,EASfA,QAIpB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAEjDoB,GAAW,uBAAGJ,UAAU,oCAAb,cAEb,yBAAKA,UAAU,aACX,4BAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,WE1BvBkB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,cAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAQ9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAIA,4BAEQ6C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,U,MClBtC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.a3783e15.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setinputValue('');\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={(e)=> handleInputChange(e)}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n\r\n}","\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=0l8JXBKkTIGZK2WEvJfL2mXP56GLV2ll`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    //console.log({img});\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   /*  const [images, setImages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        //GetGifs(category).then(imgs => setImages(imgs));\r\n        getGifs(category).then(setImages);  // es lo mismo que la anterior linea\r\n    }, [category]) */\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n    //console.log(loading);\r\n    //console.log(data);\r\n  \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                <ol>\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                {...img} \r\n                            />\r\n                        ))\r\n                    }\r\n                </ol>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => { \r\n       \r\n        getGifs(category).then(imgs => \r\n\r\n            setState({\r\n                data: imgs, \r\n                loading:false\r\n            })\r\n        );\r\n\r\n    }, [category])\r\n\r\n    /* setTimeout(() => {\r\n        setState({\r\n            data: [1,2,3,4,5,6],\r\n            loading: false\r\n        });\r\n    }, 3000); */\r\n\r\n    return state;  // { data: [], loading: true}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GiftExperApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n   /*  const handleAdd = () => {\r\n        setCategories([...categories, 'Pepe caret√≥n']);\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExperApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExperApp } from './GiftExperApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GiftExperApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}